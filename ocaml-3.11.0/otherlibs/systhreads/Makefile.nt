#########################################################################
#                                                                       #
#                            Objective Caml                             #
#                                                                       #
#            Xavier Leroy, projet Cristal, INRIA Rocquencourt           #
#                                                                       #
#   Copyright 1999 Institut National de Recherche en Informatique et    #
#   en Automatique.  All rights reserved.  This file is distributed     #
#   under the terms of the GNU Library General Public License, with     #
#   the special exception on linking described in file ../../LICENSE.   #
#                                                                       #
#########################################################################

# $Id: Makefile.nt,v 1.31 2007/11/06 15:16:56 frisch Exp $

include ../../config/Makefile

# Compilation options
CAMLC=../../boot/ocamlrun ../../ocamlc -I ../../stdlib -I ../win32unix
CAMLOPT=../../boot/ocamlrun ../../ocamlopt -I ../../stdlib -I ../win32unix
COMPFLAGS=-warn-error A -g
MKLIB=../../boot/ocamlrun ../../tools/ocamlmklib
CFLAGS=-I../../byterun $(EXTRACFLAGS)

CAMLOBJS=thread.cmo mutex.cmo condition.cmo event.cmo threadUnix.cmo
CMIFILES=$(CAMLOBJS:.cmo=.cmi)
COBJS=win32_b.$(O)
COBJS_NAT=win32_n.$(O)

GENFILES=thread.ml

LIBNAME=threads

all: lib$(LIBNAME).$(A) $(LIBNAME).cma $(CMIFILES)

allopt: lib$(LIBNAME).$(A) $(LIBNAME).cmxa $(LIBNAME).cmxs $(CMIFILES)

$(LIBNAME).cma: $(CAMLOBJS)
	$(MKLIB) -o $(LIBNAME) -ocamlc "..\\..\\boot\\ocamlrun ..\\..\\ocamlc" -linkall $(CAMLOBJS) $(LINKOPTS)

lib$(LIBNAME).$(A): $(COBJS)
	$(MKLIB) -o $(LIBNAME) $(COBJS) $(LDOPTS)

win32_b.$(O): win32.c
	$(BYTECC) $(BYTECCCOMPOPTS) $(CFLAGS) -c win32.c
	mv win32.$(O) win32_b.$(O)



$(LIBNAME).cmxa: $(CAMLOBJS:.cmo=.cmx)
	$(MKLIB) -o $(LIBNAME)nat -ocamlopt "..\\..\\boot\\ocamlrun ..\\..\\ocamlopt" -linkall $(CAMLOBJS:.cmo=.cmx) $(LINKOPTS)
	mv $(LIBNAME)nat.cmxa $(LIBNAME).cmxa
	mv $(LIBNAME)nat.$(A) $(LIBNAME).$(A)

$(LIBNAME).cmxs: $(LIBNAME).cmxa lib$(LIBNAME)nat.$(A)
	$(CAMLOPT) -shared -o $(LIBNAME).cmxs -I . $(LIBNAME).cmxa -linkall

lib$(LIBNAME)nat.$(A): $(COBJS_NAT)
	$(MKLIB) -o $(LIBNAME)nat $(COBJS_NAT) $(LDOPTS)

win32_n.$(O): win32.c
	$(NATIVECC) -DNATIVE_CODE -O -I../../asmrun -I../../byterun $(NATIVECCCOMPOPTS) -c win32.c
	mv win32.$(O) win32_n.$(O)

$(CAMLOBJS:.cmo=.cmx): ../../ocamlopt

thread.ml: thread_win32.ml
	cp thread_win32.ml thread.ml

partialclean:
	rm -f *.cm*

clean: partialclean
	rm -f *.dll *.$(A) *.$(O)
	rm -f $(GENFILES)

install:
	cp dllthreads.dll $(STUBLIBDIR)/dllthreads.dll
	cp libthreads.$(A) $(LIBDIR)/libthreads.$(A)
	mkdir -p $(LIBDIR)/threads
	cp $(CMIFILES) threads.cma $(LIBDIR)/threads
	rm -f $(LIBDIR)/threads/stdlib.cma

installopt:
	cp libthreadsnat.$(A) $(LIBDIR)/libthreadsnat.$(A)
	cp $(THREAD_OBJS:.cmo=.cmx) threads.cmxa threads.$(A) $(LIBDIR)/threads
	cp threads.cmxs $(LIBDIR)/threads

.SUFFIXES: .ml .mli .cmo .cmi .cmx

.mli.cmi:
	$(CAMLC) -c $(COMPFLAGS) $<

.ml.cmo:
	$(CAMLC) -c -g $(COMPFLAGS) $<

.ml.cmx:
	$(CAMLOPT) -c $(COMPFLAGS) $<

depend:

include .depend
